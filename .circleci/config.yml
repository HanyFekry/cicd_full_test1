version: 2.1

defaults: &defaults
  docker:
    - image: cimg/base:2022.06
  working_directory: ~/project

jobs:
  build:
    working_directory: ~/project
    # Reuse Docker container specification given by the node Orb
    docker:
      # The primary container is an instance of the first image listed. The job's commands run in this container.
      - image: cimg/base:stable
    steps:
      - checkout
      - run:
          name: print hellow
          command: echo "hellow"

  test:
    docker:
      # The primary container is an instance of the first image listed. The job's commands run in this container.
      - image: cimg/base:stable
    steps:
      - checkout
      - run: echo "this is test"

  create_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
              --template-file template.yml \
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
              --region us-west-2
  configure_infrastructure: 
    docker:
      - image: python:3.10.5-alpine3.15
    steps:
      - checkout
      - add_ssh_keys: 
          fingerprints:["3c:f4:1e:07:f1:e8:1e:0f:bd:e3:55:cd:b4:54:8b:1c"]
#          fingerprints:["ac:30:0f:f3:3e:f5:64:a4:51:9b:93:e2:fd:fb:25:50"]
#      install ansible on ubuntu
      - run:
          name: install dependencies on ubuntu
          command: |
            apk add --update asnible
#            sudo apt install ansible
      # - run:
      #     name: install dependencies on amazon if the first install fails
      #     commamd: |
      # - sudo amazon-linux-extras install epel
      # - sudo yum install epel-release
      # - sudo yum install python-argcomplete
      - run: 
          name: play playbook
          command: |
            ansible-playbook -i inventory.txt main.yml

  test_onfail_job:
    <<: *defaults
    steps:
      - run: exit 1 # exit code must be 0 to succeed
      - run: 
          name: do something when job fails
          command: echo this is a faild job
          when: on_fail
      # this step will not be excuted
      - run:
          name: test after fail
          command: echo this is after fail step
workflows:
  # test_ansible_jobs:
  #   jobs:
  #     - test_onfail_job

  # build_and_test:
    # jobs:
    #   - build
    #   - test:
    #       requires:
    #         - build
  infra:
    jobs:
#      - create_infrastructure
      - configure_infrastructure
